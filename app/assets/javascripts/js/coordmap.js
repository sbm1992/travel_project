(function (e) { e.fn.coordmap = function (t) { var n = { cookies: false, fullscreen: false, container: { name: "imgContent" }, image: { width: 1475, height: 1200, name: "imgMap" }, map: { position: "center" }, marker: { name: "marker", center: true, popup: true, popup_name: "popup", onClick: function (e, t) { }, onClose: function (e, t) { } }, controls: { init: true, name: "controls", onClick: function (e) { } }, preloader: { init: true, name: "preloader", onLoad: function (e, t) { } } }; var r = e.extend(true, n, t); return this.each(function () { var t = e(this), i = t.find("." + r.image.name), s = { init: function () { this._container.init(); if (r.fullscreen) { this.fullscreen.init(); this.fullscreen.resize() } this._globals.init(); if (r.preloader.init) this.preloader.init(); this.map.init(); this.marker.init(); if (r.controls.init) this.controls.init() }, _container: { init: function () { s._container.css(); s._container.wrap() }, css: function () { var e = { width: "100%", height: "100%" }; i.css(e); var n = { position: "relative", overflow: "hidden", cursor: "move" }; t.css(n) }, wrap: function () { var n = { zIndex: "1", position: "absolute", width: r.image.width, height: r.image.height }; t.wrapInner(e("<div />").addClass(r.container.name).css(n)) } }, _globals: { init: function () { C = t.find("." + r.container.name), MARKER = C.find("." + r.marker.name), md = false, mx = 0, my = 0, ex = 0, ey = 0, delta = 0, mv = [], interval = 0, n = { w: t.width(), h: t.height() }, I = { w: C.width(), h: C.height() }; if (r.controls.init) { CONTROLS = e("." + r.controls.name).find("a") } } }, _mouse: { get: function (e) { var t = e.pageX, n = e.pageY; return { x: t, y: n} }, update: function (e) { var t = s._mouse.get(e), n = t.x, i = t.y, o = n - mx, u = i - my, a = ey + u, f = ex + o, l = s.map.position.check(f, a), c = { top: l.y, left: l.x }; C.css(c); if (r.cookies) { s.cookies.create("position", l.x + "," + l.y, 7) } }, decelerate: function (e) { var t = mv.length, n = 0; if (t) { var r = 20; interval = setInterval(function () { var e = C.position(), i = e.left, o = e.top, u = (r - n) / r, a = t - 1, f = (mv[a].x - mv[0].x) / t, c = (mv[a].y - mv[0].y) / t, h = f * u, p = c * u, d = s.map.position.check(h + i, p + o), v = { left: d.x, top: d.y }; C.css(v); ++n; if (n == r) { clearInterval(interval); n = 0 } }, 40) } }, wheel: { init: function (e) { t.handle = function (e) { e.preventDefault(); if (!e) { e = window.event } if (e.wheelDelta) { delta = e.wheelDelta / 120; if (window.opera) { delta = -delta } } else if (e.detail) { delta = -e.detail / 3 } }; if (window.addEventListener) { window.addEventListener("DOMMouseScroll", t.handle, false) } window.onmousewheel = document.onmousewheel = t.handle }, remove: function () { if (window.removeEventListener) { window.removeEventListener("DOMMouseScroll", t.handle, false) } window.onmousewheel = document.onmousewheel = null } } }, fullscreen: { init: function () { var n = e(window), r = n.width(), i = n.height(), s = { width: r, height: i }; t.css(s) }, resize: function () { e(window).resize(function () { s.fullscreen.init(); n = { w: t.width(), h: t.height()} }) } }, cookies: { create: function (e, t, n) { if (n) { var r = new Date, i = r.getTime() + n * 24 * 60 * 60 * 1e3; r.setTime(i); var s = "; expires=" + r.toGMTString() } else { var s = "" } document.cookie = e + "=" + t + s + "; path=/" }, erase: function (e) { cookies.create(e, "", -1) }, read: function (e) { var t = e + "=", n = document.cookie.split(";"); for (var r = 0; r < n.length; r++) { var i = n[r]; while (i.charAt(0) == " ") { i = i.substring(1, i.length) } if (i.indexOf(t) == 0) { return i.substring(t.length, i.length) } } return null } }, preloader: { init: function () { var t = new Image, n = i.attr("src"); s.preloader.create(); e(t).addClass(r.image.name).attr("src", n).load(function () { var t = e(this), n = { width: this.width, height: this.height }; t.css(n); i.remove(); s.preloader.remove(); r.preloader.onLoad.call(this, t, n) }).appendTo(C) }, create: function () { var n = { position: "absolute", zIndex: "10", top: "0", left: "0", width: "100%", height: "100%" }; t.append(e("<div />").addClass(r.preloader.name).css(n)) }, remove: function () { t.find("." + r.preloader.name).fadeOut(400, function () { var t = e(this); t.remove() }) } }, map: { init: function () { s.map.position.set(); s.map.move() }, position: { set: function () { if (r.cookies) { if (typeof s.cookies.read("position") != "null") { var e = s.cookies.read("position").split(","), t = e[0], i = e[1] } else { var t = (n.w - I.w) / 2, i = (n.h - I.h) / 2 } } else { var e = r.map.position; switch (e) { case "center": var t = (n.w - I.w) / 2, i = (n.h - I.h) / 2; break; case "top_left": var t = 0, i = 0; break; case "top_right": var t = n.w - I.w, i = 0; break; case "bottom_left": var t = 0, i = n.h - I.h; break; case "bottom_right": var t = n.w - I.w, i = n.h - I.h; break; default: var o = e.split(" "), t = -o[0], i = -o[1], o = s.map.position.check(t, i), t = o.x, i = o.y } } var u = { top: i, left: t }; C.css(u) }, check: function (e, t) { if (t < n.h - I.h) { t = n.h - I.h } else if (t > 0) { t = 0 } if (e < n.w - I.w) { e = n.w - I.w } else if (e > 0) { e = 0 } return { x: e, y: t} } }, move: function () { C.bind({ mousedown: function (e) { md = true; var t = s._mouse.get(e); mx = t.x, my = t.y; var n = C.position(); ex = n.left, ey = n.top; mv = []; clearInterval(interval); s._mouse.update(e); return false }, mousemove: function (e) { if (md) { s._mouse.update(e); var t = s._mouse.get(e), n = { x: t.x, y: t.y }; mv.push(n); if (mv.length > 15) { mv.pop() } } return false }, mouseup: function (e) { if (md) md = false; s._mouse.decelerate(e); return false }, mouseout: function () { if (md) md = false; s._mouse.wheel.remove(); return false }, mouseover: function (e) { s._mouse.wheel.init(e); return false }, mousewheel: function (e) { s._zoom.init(e) } }) } }, _zoom: { init: function (e) { } }, marker: { init: function () { s.marker.set(); s.marker.open(); s.marker.close() }, set: function () { MARKER.each(function () { var t = e(this), n = t.attr("data-coords").split(","); x = parseInt(n[0]), y = parseInt(n[1]), css = { position: "absolute", zIndex: "2", top: y, left: x }; t.css(css) }).wrapInner(e("<div />").addClass(r.marker.name + "Content").hide()) }, open: function () { MARKER.live("click", function () { var t = e(this), i = t.attr("id"), o = r.marker, u = t.width(), a = t.height(), f = t.position(), l = f.left, c = f.top, i = t.attr("id"), h = t.find("." + o.name + "Content").html(); if (o.center) { var p = -c + n.h / 2 - a / 2, d = -l + n.w / 2 - u / 2, v = s.map.position.check(d, p), m = { top: v.y, left: v.x }; C.animate(m) } if (o.popup) { e("." + o.popup_name).remove(); var g = { position: "absolute", zIndex: "3" }; t.after(e("<div />").addClass(o.popup_name + " " + i).css(g).html(h).append(e("<a />").addClass("close"))); var y = t.next("." + o.popup_name), b = y.innerWidth(), w = y.innerHeight(), E = 0, x = 0; if (l - b < 0) { E = l } else if (l + b / 2 > I.w) { E = l - b + u } else { E = l - (b / 2 - u / 2) } if (c - w < 0) { x = c + a + a / 1.5 } else { x = c - w - a / 1.5 } if (l - b < 0 && c - w < 0) { E = l + u * 2; x = c - a / 2 } else if (c - w < 0 && l + b / 2 > I.w) { E = l - b - u / 2; x = c - a / 2 } else if (c + w > I.h && l + b / 2 > I.w) { E = l - b + u; x = c - w - a / 2 } else if (c + w > I.h && l - b < 0) { E = l; x = c - w - a / 2 } var g = { left: E, top: x }; y.css(g) } s.controls.active.set(i); o.onClick.call(this, t, y); return false }) }, close: function () { C.find(".close").live("click", function () { var t = e(this), n = t.parents("." + r.marker.popup_name), i = n.prev("." + r.marker.name); n.remove(); s.controls.active.remove(); r.marker.onClose.call(this, i, n); return false }) } }, controls: { init: function () { s.controls.set() }, set: function () { CONTROLS.click(function () { var t = e(this), n = t.attr("title"); div = C.find("." + r.marker.name).filter("#" + n); div.trigger("click"); r.controls.onClick.call(this, div); return false }) }, active: { set: function (e) { if (r.controls.init) { CONTROLS.removeClass("active").filter(function () { return this.rel == e }).addClass("active") } }, remove: function () { if (r.controls.init) { CONTROLS.removeClass("active") } } }} }; s.init() }) } })(jQuery)